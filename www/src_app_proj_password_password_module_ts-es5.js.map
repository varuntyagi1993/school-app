{"version":3,"sources":["webpack:///src/app/proj/password/password-routing.module.ts","webpack:///src/app/proj/password/password.module.ts","webpack:///src/app/proj/password/password.page.ts","webpack:///src/app/proj/password/password.page.scss","webpack:///src/app/proj/password/password.page.html"],"names":["routes","path","component","PasswordPage","PasswordPageRoutingModule","NgModule","imports","RouterModule","exports","PasswordPageModule","CommonModule","ReactiveFormsModule","FormsModule","IonicModule","declarations","formBuilder","auth","router","generalts","actroute","submitted","mob","snapshot","paramMap","get","registerForm","group","password","Validators","confirmPassword","validator","MustMatch","controls","invalid","console","log","value","pas","password_confirm","token","localStorage","getItem","loading","load","present","g_postt","subscribe","sa","message","dismiss","showToast","setItem","navigate","error","status_code","err","FormBuilder","AuthService","Router","GeneralService","ActivatedRoute","Component","selector","template"],"mappings":"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","file":"src_app_proj_password_password_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PasswordPage } from './password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PasswordPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { PasswordPageRoutingModule } from \"./password-routing.module\";\n\nimport { PasswordPage } from \"./password.page\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IonicModule,\n    PasswordPageRoutingModule\n  ],\n  declarations: [PasswordPage]\n})\nexport class PasswordPageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MustMatch, GeneralService } from \"src/app/services/general.service\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-password\",\n  templateUrl: \"./password.page.html\",\n  styleUrls: [\"./password.page.scss\"]\n})\nexport class PasswordPage implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n  mob: any;\n  err: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    public auth: AuthService,\n    private router: Router,\n    public generalts: GeneralService,\n    public actroute: ActivatedRoute\n  ) {\n    this.mob = this.actroute.snapshot.paramMap.get(\"mob_num\");\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group(\n      {\n        password: [\"\", [Validators.required, Validators.minLength(6)]],\n        confirmPassword: [\"\", Validators.required]\n      },\n      {\n        validator: MustMatch(\"password\", \"confirmPassword\")\n      }\n    );\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  async onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    } else {\n      console.log(this.registerForm.value.confirmPassword, \"reg\");\n      var pas = {\n        password: this.registerForm.value.password,\n        //mobile: this.mob,\n        password_confirm: this.registerForm.value.confirmPassword\n      };\n      var token = localStorage.getItem(\"pas_tok\");\n      const load = await this.generalts.loading(\"Loading ...\");\n      await load.present();\n      this.auth.g_postt(pas, \"change-password\", token).subscribe(\n        sa => {\n          console.log(sa, \"da\");\n          if (sa.message) {\n            load.dismiss();\n            //  alert(\"password\");\n            this.generalts.showToast(sa.message);\n            localStorage.setItem(\"*/\", this.mob);\n            this.router.navigate([\"/home\"]);\n            //localStorage.setItem(\"asd\", this.mob);\n          }\n          // else if (sa.status != true) {\n          //   this.err = sa.status;\n          // }\n        },\n        error => {\n          load.dismiss();\n          console.error(\"Error!\", error.status_code, error.message);\n          if (error.status_code == 400) {\n            this.err = error.message;\n          }\n        }\n      );\n    }\n\n    // alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(this.registerForm.value));\n  }\n}\n","export default \"ion-item {\\n  padding: 0 15px !important;\\n}\\n\\n.brde {\\n  text-align: center;\\n  border: 1px solid #6b1a0d;\\n  padding: 4px 13px 20px;\\n  border-radius: 48px;\\n  margin: 0 13px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3N3b3JkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDBCQUFBO0FBQ0Y7O0FBSUE7RUFDRSxrQkFBQTtFQUNBLHlCQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFERiIsImZpbGUiOiJwYXNzd29yZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taXRlbSB7XG4gIHBhZGRpbmc6IDAgMTVweCAhaW1wb3J0YW50O1xuICAvLyAgIC5pb24tbGFiZWwge1xuICAvLyAgICAgbWFyZ2luOiAwIGF1dG8gIWltcG9ydGFudDtcbiAgLy8gICB9XG59XG4uYnJkZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyOiAxcHggc29saWQgIzZiMWEwZDtcbiAgcGFkZGluZzogNHB4IDEzcHggMjBweDtcbiAgYm9yZGVyLXJhZGl1czogNDhweDtcbiAgbWFyZ2luOiAwIDEzcHg7XG59XG4iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Change Password</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div class=\\\"text-center\\\" style=\\\"text-align: center;\\\">\\n    <img src=\\\"../../../assets/images/banner_2.png\\\" class=\\\"img-fluid\\\" alt=\\\"\\\" />\\n  </div>\\n\\n  <div class=\\\"brde\\\">\\n    <h3>Change Password</h3>\\n    <form style=\\\"margin-top: 10px;\\\" [formGroup]=\\\"registerForm\\\">\\n      <ion-item class=\\\"form-group\\\">\\n        <ion-label position=\\\"floating\\\">Password</ion-label>\\n        <ion-input\\n          type=\\\"password\\\"\\n          clearOnEdit=\\\"false\\\"\\n          formControlName=\\\"password\\\"\\n          class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n        ></ion-input>\\n        <div\\n          *ngIf=\\\"submitted && f.password.errors\\\"\\n          class=\\\"invalid-feedback red\\\"\\n        >\\n          <div *ngIf=\\\"f.password.errors.required\\\">\\n            Password is required\\n          </div>\\n          <div *ngIf=\\\"f.password.errors.minlength\\\">\\n            Password must be at least 6 characters\\n          </div>\\n        </div>\\n      </ion-item>\\n\\n      <ion-item class=\\\"form-group\\\">\\n        <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\n        <ion-input\\n          clearOnEdit=\\\"false\\\"\\n          type=\\\"password\\\"\\n          formControlName=\\\"confirmPassword\\\"\\n          class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\"\\n        ></ion-input>\\n        <div\\n          *ngIf=\\\"submitted && f.confirmPassword.errors\\\"\\n          class=\\\"invalid-feedback red\\\"\\n        >\\n          <div *ngIf=\\\"f.confirmPassword.errors.required\\\">\\n            Confirm Password is required\\n          </div>\\n          <div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">\\n            Password miss match\\n          </div>\\n        </div>\\n      </ion-item>\\n      <p text-center>{{err}}</p>\\n      <div text-center>\\n        <ion-button padding class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" color=\\\"tertiary\\\"\\n          >Submit</ion-button\\n        >\\n      </div>\\n    </form>\\n  </div>\\n</ion-content>\\n\\n<!-- <div class=\\\"form-group\\\">\\n      <label>Password</label>\\n      <input\\n        type=\\\"password\\\"\\n        formControlName=\\\"password\\\"\\n        class=\\\"form-control\\\"\\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n      />\\n      <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n        <div *ngIf=\\\"f.password.errors.minlength\\\">\\n          Password must be at least 6 characters\\n        </div>\\n      </div>\\n    </div> -->\\n\\n<!-- <div class=\\\"form-group\\\">\\n      <label>Confirm Password</label>\\n      <input\\n        type=\\\"password\\\"\\n        formControlName=\\\"confirmPassword\\\"\\n        class=\\\"form-control\\\"\\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\"\\n      />\\n      <div\\n        *ngIf=\\\"submitted && f.confirmPassword.errors\\\"\\n        class=\\\"invalid-feedback\\\"\\n      >\\n        <div *ngIf=\\\"f.confirmPassword.errors.required\\\">\\n          Confirm Password is required\\n        </div>\\n        <div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">\\n          Passwords must match\\n        </div>\\n      </div>\\n    </div>\\n  \\n  \\n  <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary\\\">Register</button>\\n    </div>-->\\n\";"]}