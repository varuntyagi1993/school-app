{"version":3,"sources":["./src/app/proj/password/password-routing.module.ts","./src/app/proj/password/password.module.ts","./src/app/proj/password/password.page.ts","./src/app/proj/password/password.page.scss","./src/app/proj/password/password.page.html"],"names":[],"mappings":"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","file":"src_app_proj_password_password_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PasswordPage } from './password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PasswordPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { PasswordPageRoutingModule } from \"./password-routing.module\";\n\nimport { PasswordPage } from \"./password.page\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IonicModule,\n    PasswordPageRoutingModule\n  ],\n  declarations: [PasswordPage]\n})\nexport class PasswordPageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MustMatch, GeneralService } from \"src/app/services/general.service\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-password\",\n  templateUrl: \"./password.page.html\",\n  styleUrls: [\"./password.page.scss\"]\n})\nexport class PasswordPage implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n  mob: any;\n  err: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    public auth: AuthService,\n    private router: Router,\n    public generalts: GeneralService,\n    public actroute: ActivatedRoute\n  ) {\n    this.mob = this.actroute.snapshot.paramMap.get(\"mob_num\");\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group(\n      {\n        password: [\"\", [Validators.required, Validators.minLength(6)]],\n        confirmPassword: [\"\", Validators.required]\n      },\n      {\n        validator: MustMatch(\"password\", \"confirmPassword\")\n      }\n    );\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  async onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    } else {\n      console.log(this.registerForm.value.confirmPassword, \"reg\");\n      var pas = {\n        password: this.registerForm.value.password,\n        //mobile: this.mob,\n        password_confirm: this.registerForm.value.confirmPassword\n      };\n      var token = localStorage.getItem(\"pas_tok\");\n      const load = await this.generalts.loading(\"Loading ...\");\n      await load.present();\n      this.auth.g_postt(pas, \"change-password\", token).subscribe(\n        sa => {\n          console.log(sa, \"da\");\n          if (sa.message) {\n            load.dismiss();\n            //  alert(\"password\");\n            this.generalts.showToast(sa.message);\n            localStorage.setItem(\"*/\", this.mob);\n            this.router.navigate([\"/home\"]);\n            //localStorage.setItem(\"asd\", this.mob);\n          }\n          // else if (sa.status != true) {\n          //   this.err = sa.status;\n          // }\n        },\n        error => {\n          load.dismiss();\n          console.error(\"Error!\", error.status_code, error.message);\n          if (error.status_code == 400) {\n            this.err = error.message;\n          }\n        }\n      );\n    }\n\n    // alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(this.registerForm.value));\n  }\n}\n","export default \"ion-item {\\n  padding: 0 15px !important;\\n}\\n\\n.brde {\\n  text-align: center;\\n  border: 1px solid #6b1a0d;\\n  padding: 4px 13px 20px;\\n  border-radius: 48px;\\n  margin: 0 13px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3N3b3JkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDBCQUFBO0FBQ0Y7O0FBSUE7RUFDRSxrQkFBQTtFQUNBLHlCQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFERiIsImZpbGUiOiJwYXNzd29yZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taXRlbSB7XG4gIHBhZGRpbmc6IDAgMTVweCAhaW1wb3J0YW50O1xuICAvLyAgIC5pb24tbGFiZWwge1xuICAvLyAgICAgbWFyZ2luOiAwIGF1dG8gIWltcG9ydGFudDtcbiAgLy8gICB9XG59XG4uYnJkZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyOiAxcHggc29saWQgIzZiMWEwZDtcbiAgcGFkZGluZzogNHB4IDEzcHggMjBweDtcbiAgYm9yZGVyLXJhZGl1czogNDhweDtcbiAgbWFyZ2luOiAwIDEzcHg7XG59XG4iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Change Password</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div class=\\\"text-center\\\" style=\\\"text-align: center;\\\">\\n    <img src=\\\"../../../assets/images/banner_2.png\\\" class=\\\"img-fluid\\\" alt=\\\"\\\" />\\n  </div>\\n\\n  <div class=\\\"brde\\\">\\n    <h3>Change Password</h3>\\n    <form style=\\\"margin-top: 10px;\\\" [formGroup]=\\\"registerForm\\\">\\n      <ion-item class=\\\"form-group\\\">\\n        <ion-label position=\\\"floating\\\">Password</ion-label>\\n        <ion-input\\n          type=\\\"password\\\"\\n          clearOnEdit=\\\"false\\\"\\n          formControlName=\\\"password\\\"\\n          class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n        ></ion-input>\\n        <div\\n          *ngIf=\\\"submitted && f.password.errors\\\"\\n          class=\\\"invalid-feedback red\\\"\\n        >\\n          <div *ngIf=\\\"f.password.errors.required\\\">\\n            Password is required\\n          </div>\\n          <div *ngIf=\\\"f.password.errors.minlength\\\">\\n            Password must be at least 6 characters\\n          </div>\\n        </div>\\n      </ion-item>\\n\\n      <ion-item class=\\\"form-group\\\">\\n        <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\n        <ion-input\\n          clearOnEdit=\\\"false\\\"\\n          type=\\\"password\\\"\\n          formControlName=\\\"confirmPassword\\\"\\n          class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\"\\n        ></ion-input>\\n        <div\\n          *ngIf=\\\"submitted && f.confirmPassword.errors\\\"\\n          class=\\\"invalid-feedback red\\\"\\n        >\\n          <div *ngIf=\\\"f.confirmPassword.errors.required\\\">\\n            Confirm Password is required\\n          </div>\\n          <div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">\\n            Password miss match\\n          </div>\\n        </div>\\n      </ion-item>\\n      <p text-center>{{err}}</p>\\n      <div text-center>\\n        <ion-button padding class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" color=\\\"tertiary\\\"\\n          >Submit</ion-button\\n        >\\n      </div>\\n    </form>\\n  </div>\\n</ion-content>\\n\\n<!-- <div class=\\\"form-group\\\">\\n      <label>Password</label>\\n      <input\\n        type=\\\"password\\\"\\n        formControlName=\\\"password\\\"\\n        class=\\\"form-control\\\"\\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n      />\\n      <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n        <div *ngIf=\\\"f.password.errors.minlength\\\">\\n          Password must be at least 6 characters\\n        </div>\\n      </div>\\n    </div> -->\\n\\n<!-- <div class=\\\"form-group\\\">\\n      <label>Confirm Password</label>\\n      <input\\n        type=\\\"password\\\"\\n        formControlName=\\\"confirmPassword\\\"\\n        class=\\\"form-control\\\"\\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\"\\n      />\\n      <div\\n        *ngIf=\\\"submitted && f.confirmPassword.errors\\\"\\n        class=\\\"invalid-feedback\\\"\\n      >\\n        <div *ngIf=\\\"f.confirmPassword.errors.required\\\">\\n          Confirm Password is required\\n        </div>\\n        <div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">\\n          Passwords must match\\n        </div>\\n      </div>\\n    </div>\\n  \\n  \\n  <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary\\\">Register</button>\\n    </div>-->\\n\";"],"sourceRoot":"webpack:///"}